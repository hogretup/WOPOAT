{"ast":null,"code":"import _defineProperty from\"C:/Users/wongkj/Desktop/wopoat/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/wongkj/Desktop/wopoat/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/wongkj/Desktop/wopoat/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useLocation}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";function QuizPage(){var location=useLocation();// Quiz information was passed into \"state\" from Homepage\nvar _location$state=location.state,quiz=_location$state.quiz,topic=_location$state.topic,difficulty=_location$state.difficulty;console.log(quiz[\"statement\"]);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),selectedOptions=_useState2[0],setSelectedOptions=_useState2[1];var handleOptionChange=function handleOptionChange(event,questionIndex){// Updates new state based on previous state by passing in function\nsetSelectedOptions(function(prevSelectedOptions){return _objectSpread(_objectSpread({},prevSelectedOptions),{},_defineProperty({},questionIndex,event.target.value));});};var handleSubmit=function handleSubmit(event){event.preventDefault();// Handle the submission logic here, such as checking the answers and showing the result\n};return/*#__PURE__*/_jsx(\"div\",{children:\"QuizPage\"});/*\r\n  return (\r\n    <div>\r\n      <h1>Expand Quiz</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {questions.map((question, index) => (\r\n          <div key={index}>\r\n            <h3>{question.text}</h3>\r\n            {question.options.map((option, optionIndex) => (\r\n              <div key={optionIndex}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={`option_${index}_${optionIndex}`}\r\n                  name={`quizOption_${index}`}\r\n                  value={option}\r\n                  checked={selectedOptions[index] === option}\r\n                  onChange={(event) => handleOptionChange(event, index)}\r\n                />\r\n                <label htmlFor={`option_${index}_${optionIndex}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );*/}export default QuizPage;","map":{"version":3,"names":["React","useState","useLocation","jsx","_jsx","QuizPage","location","_location$state","state","quiz","topic","difficulty","console","log","_useState","_useState2","_slicedToArray","selectedOptions","setSelectedOptions","handleOptionChange","event","questionIndex","prevSelectedOptions","_objectSpread","_defineProperty","target","value","handleSubmit","preventDefault","children"],"sources":["C:/Users/wongkj/Desktop/wopoat/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction QuizPage() {\r\n  const location = useLocation();\r\n  // Quiz information was passed into \"state\" from Homepage\r\n  const { quiz, topic, difficulty } = location.state;\r\n  console.log(quiz[\"statement\"]);\r\n\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n\r\n  const handleOptionChange = (event, questionIndex) => {\r\n    // Updates new state based on previous state by passing in function\r\n    setSelectedOptions((prevSelectedOptions) => ({\r\n      ...prevSelectedOptions,\r\n      [questionIndex]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Handle the submission logic here, such as checking the answers and showing the result\r\n  };\r\n\r\n  return <div>QuizPage</div>;\r\n  /*\r\n  return (\r\n    <div>\r\n      <h1>Expand Quiz</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {questions.map((question, index) => (\r\n          <div key={index}>\r\n            <h3>{question.text}</h3>\r\n            {question.options.map((option, optionIndex) => (\r\n              <div key={optionIndex}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={`option_${index}_${optionIndex}`}\r\n                  name={`quizOption_${index}`}\r\n                  value={option}\r\n                  checked={selectedOptions[index] === option}\r\n                  onChange={(event) => handleOptionChange(event, index)}\r\n                />\r\n                <label htmlFor={`option_${index}_${optionIndex}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );*/\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"wXAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,GAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B;AACA,IAAAK,eAAA,CAAoCD,QAAQ,CAACE,KAAK,CAA1CC,IAAI,CAAAF,eAAA,CAAJE,IAAI,CAAEC,KAAK,CAAAH,eAAA,CAALG,KAAK,CAAEC,UAAU,CAAAJ,eAAA,CAAVI,UAAU,CAC/BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC,WAAW,CAAC,CAAC,CAE9B,IAAAK,SAAA,CAA8Cb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnDG,eAAe,CAAAF,UAAA,IAAEG,kBAAkB,CAAAH,UAAA,IAE1C,GAAM,CAAAI,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIC,KAAK,CAAEC,aAAa,CAAK,CACnD;AACAH,kBAAkB,CAAC,SAACI,mBAAmB,SAAAC,aAAA,CAAAA,aAAA,IAClCD,mBAAmB,KAAAE,eAAA,IACrBH,aAAa,CAAGD,KAAK,CAACK,MAAM,CAACC,KAAK,IACnC,CAAC,CACL,CAAC,CAED,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIP,KAAK,CAAK,CAC9BA,KAAK,CAACQ,cAAc,CAAC,CAAC,CACtB;AACF,CAAC,CAED,mBAAOxB,IAAA,QAAAyB,QAAA,CAAK,UAAQ,CAAK,CAAC,CAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACA,CAEA,cAAe,CAAAxB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}