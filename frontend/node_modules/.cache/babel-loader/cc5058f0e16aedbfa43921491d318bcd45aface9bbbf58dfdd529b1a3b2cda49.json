{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MathMLCompile = void 0;\nvar MmlNode_js_1 = require(\"../../core/MmlTree/MmlNode.js\");\nvar Options_js_1 = require(\"../../util/Options.js\");\nvar Entities = __importStar(require(\"../../util/Entities.js\"));\nvar MathMLCompile = function () {\n  function MathMLCompile(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var Class = this.constructor;\n    this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, Class.OPTIONS), options);\n  }\n  MathMLCompile.prototype.setMmlFactory = function (mmlFactory) {\n    this.factory = mmlFactory;\n  };\n  MathMLCompile.prototype.compile = function (node) {\n    var mml = this.makeNode(node);\n    mml.verifyTree(this.options['verify']);\n    mml.setInheritedAttributes({}, false, 0, false);\n    mml.walkTree(this.markMrows);\n    return mml;\n  };\n  MathMLCompile.prototype.makeNode = function (node) {\n    var e_1, _a;\n    var adaptor = this.adaptor;\n    var limits = false;\n    var kind = adaptor.kind(node).replace(/^.*:/, '');\n    var texClass = adaptor.getAttribute(node, 'data-mjx-texclass') || '';\n    if (texClass) {\n      texClass = this.filterAttribute('data-mjx-texclass', texClass) || '';\n    }\n    var type = texClass && kind === 'mrow' ? 'TeXAtom' : kind;\n    try {\n      for (var _b = __values(this.filterClassList(adaptor.allClasses(node))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        if (name_1.match(/^MJX-TeXAtom-/) && kind === 'mrow') {\n          texClass = name_1.substr(12);\n          type = 'TeXAtom';\n        } else if (name_1 === 'MJX-fixedlimits') {\n          limits = true;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    this.factory.getNodeClass(type) || this.error('Unknown node type \"' + type + '\"');\n    var mml = this.factory.create(type);\n    if (type === 'TeXAtom' && texClass === 'OP' && !limits) {\n      mml.setProperty('movesupsub', true);\n      mml.attributes.setInherited('movablelimits', true);\n    }\n    if (texClass) {\n      mml.texClass = MmlNode_js_1.TEXCLASS[texClass];\n      mml.setProperty('texClass', mml.texClass);\n    }\n    this.addAttributes(mml, node);\n    this.checkClass(mml, node);\n    this.addChildren(mml, node);\n    return mml;\n  };\n  MathMLCompile.prototype.addAttributes = function (mml, node) {\n    var e_2, _a;\n    var ignoreVariant = false;\n    try {\n      for (var _b = __values(this.adaptor.allAttributes(node)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var attr = _c.value;\n        var name_2 = attr.name;\n        var value = this.filterAttribute(name_2, attr.value);\n        if (value === null || name_2 === 'xmlns') {\n          continue;\n        }\n        if (name_2.substr(0, 9) === 'data-mjx-') {\n          switch (name_2.substr(9)) {\n            case 'alternate':\n              mml.setProperty('variantForm', true);\n              break;\n            case 'variant':\n              mml.attributes.set('mathvariant', value);\n              ignoreVariant = true;\n              break;\n            case 'smallmatrix':\n              mml.setProperty('scriptlevel', 1);\n              mml.setProperty('useHeight', false);\n              break;\n            case 'accent':\n              mml.setProperty('mathaccent', value === 'true');\n              break;\n            case 'auto-op':\n              mml.setProperty('autoOP', value === 'true');\n              break;\n            case 'script-align':\n              mml.setProperty('scriptalign', value);\n              break;\n          }\n        } else if (name_2 !== 'class') {\n          var val = value.toLowerCase();\n          if (val === 'true' || val === 'false') {\n            mml.attributes.set(name_2, val === 'true');\n          } else if (!ignoreVariant || name_2 !== 'mathvariant') {\n            mml.attributes.set(name_2, value);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n  MathMLCompile.prototype.filterAttribute = function (_name, value) {\n    return value;\n  };\n  MathMLCompile.prototype.filterClassList = function (list) {\n    return list;\n  };\n  MathMLCompile.prototype.addChildren = function (mml, node) {\n    var e_3, _a;\n    if (mml.arity === 0) {\n      return;\n    }\n    var adaptor = this.adaptor;\n    try {\n      for (var _b = __values(adaptor.childNodes(node)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        var name_3 = adaptor.kind(child);\n        if (name_3 === '#comment') {\n          continue;\n        }\n        if (name_3 === '#text') {\n          this.addText(mml, child);\n        } else if (mml.isKind('annotation-xml')) {\n          mml.appendChild(this.factory.create('XML').setXML(child, adaptor));\n        } else {\n          var childMml = mml.appendChild(this.makeNode(child));\n          if (childMml.arity === 0 && adaptor.childNodes(child).length) {\n            if (this.options['fixMisplacedChildren']) {\n              this.addChildren(mml, child);\n            } else {\n              childMml.mError('There should not be children for ' + childMml.kind + ' nodes', this.options['verify'], true);\n            }\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  MathMLCompile.prototype.addText = function (mml, child) {\n    var text = this.adaptor.value(child);\n    if ((mml.isToken || mml.getProperty('isChars')) && mml.arity) {\n      if (mml.isToken) {\n        text = Entities.translate(text);\n        text = this.trimSpace(text);\n      }\n      mml.appendChild(this.factory.create('text').setText(text));\n    } else if (text.match(/\\S/)) {\n      this.error('Unexpected text node \"' + text + '\"');\n    }\n  };\n  MathMLCompile.prototype.checkClass = function (mml, node) {\n    var e_4, _a;\n    var classList = [];\n    try {\n      for (var _b = __values(this.filterClassList(this.adaptor.allClasses(node))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_4 = _c.value;\n        if (name_4.substr(0, 4) === 'MJX-') {\n          if (name_4 === 'MJX-variant') {\n            mml.setProperty('variantForm', true);\n          } else if (name_4.substr(0, 11) !== 'MJX-TeXAtom') {\n            mml.attributes.set('mathvariant', this.fixCalligraphic(name_4.substr(3)));\n          }\n        } else {\n          classList.push(name_4);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    if (classList.length) {\n      mml.attributes.set('class', classList.join(' '));\n    }\n  };\n  MathMLCompile.prototype.fixCalligraphic = function (variant) {\n    return variant.replace(/caligraphic/, 'calligraphic');\n  };\n  MathMLCompile.prototype.markMrows = function (mml) {\n    if (mml.isKind('mrow') && !mml.isInferred && mml.childNodes.length >= 2) {\n      var first = mml.childNodes[0];\n      var last = mml.childNodes[mml.childNodes.length - 1];\n      if (first.isKind('mo') && first.attributes.get('fence') && first.attributes.get('stretchy') && last.isKind('mo') && last.attributes.get('fence') && last.attributes.get('stretchy')) {\n        if (first.childNodes.length) {\n          mml.setProperty('open', first.getText());\n        }\n        if (last.childNodes.length) {\n          mml.setProperty('close', last.getText());\n        }\n      }\n    }\n  };\n  MathMLCompile.prototype.trimSpace = function (text) {\n    return text.replace(/[\\t\\n\\r]/g, ' ').replace(/^ +/, '').replace(/ +$/, '').replace(/  +/g, ' ');\n  };\n  MathMLCompile.prototype.error = function (message) {\n    throw new Error(message);\n  };\n  MathMLCompile.OPTIONS = {\n    MmlFactory: null,\n    fixMisplacedChildren: true,\n    verify: __assign({}, MmlNode_js_1.AbstractMmlNode.verifyDefaults),\n    translateEntities: true\n  };\n  return MathMLCompile;\n}();\nexports.MathMLCompile = MathMLCompile;","map":{"version":3,"names":["MmlNode_js_1","require","Options_js_1","Entities","__importStar","MathMLCompile","options","Class","constructor","userOptions","defaultOptions","OPTIONS","prototype","setMmlFactory","mmlFactory","factory","compile","node","mml","makeNode","verifyTree","setInheritedAttributes","walkTree","markMrows","adaptor","limits","kind","replace","texClass","getAttribute","filterAttribute","type","_b","__values","filterClassList","allClasses","_c","next","done","name_1","value","match","substr","getNodeClass","error","create","setProperty","attributes","setInherited","TEXCLASS","addAttributes","checkClass","addChildren","ignoreVariant","allAttributes","attr","name_2","name","set","val","toLowerCase","_name","list","arity","childNodes","child","name_3","addText","isKind","appendChild","setXML","childMml","length","mError","text","isToken","getProperty","translate","trimSpace","setText","classList","name_4","fixCalligraphic","push","join","variant","isInferred","first","last","get","getText","message","Error","MmlFactory","fixMisplacedChildren","verify","__assign","AbstractMmlNode","verifyDefaults","translateEntities","exports"],"sources":["C:\\Users\\wongkj\\Desktop\\wopoat\\frontend\\node_modules\\mathjax-full\\ts\\input\\mathml\\MathMLCompile.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implementation of the Compile function for the MathML input jax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MmlFactory} from '../../core/MmlTree/MmlFactory.js';\nimport {MmlNode, TextNode, XMLNode, AbstractMmlNode, AbstractMmlTokenNode, TEXCLASS}\nfrom '../../core/MmlTree/MmlNode.js';\nimport {userOptions, defaultOptions, OptionList} from '../../util/Options.js';\nimport * as Entities from '../../util/Entities.js';\nimport {DOMAdaptor} from '../../core/DOMAdaptor.js';\n\n/********************************************************************/\n/**\n *  The class for performing the MathML DOM node to\n *  internal MmlNode conversion.\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class MathMLCompile<N, T, D> {\n\n  /**\n   *  The default options for this object\n   */\n  public static OPTIONS: OptionList = {\n    MmlFactory: null,                   // The MmlFactory to use (defaults to a new MmlFactory)\n    fixMisplacedChildren: true,         // True if we want to use heuristics to try to fix\n                                        //   problems with the tree based on HTML not handling\n                                        //   self-closing tags properly\n    verify: {                           // Options to pass to verifyTree() controlling MathML verification\n      ...AbstractMmlNode.verifyDefaults\n    },\n    translateEntities: true             // True means translate entities in text nodes\n  };\n\n  /**\n   * The DOMAdaptor for the document being processed\n   */\n  public adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   *  The instance of the MmlFactory object and\n   */\n  protected factory: MmlFactory;\n  /**\n   *  The options (the defaults with the user options merged in)\n   */\n  protected options: OptionList;\n\n  /**\n   *  Merge the user options into the defaults, and save them\n   *  Create the MmlFactory object\n   *\n   * @param {OptionList} options  The options controlling the conversion\n   */\n  constructor(options: OptionList = {}) {\n    const Class = this.constructor as typeof MathMLCompile;\n    this.options = userOptions(defaultOptions({}, Class.OPTIONS), options);\n  }\n\n  /**\n   * @param{MmlFactory} mmlFactory   The MathML factory to use for new nodes\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    this.factory = mmlFactory;\n  }\n\n  /**\n   * Convert a MathML DOM tree to internal MmlNodes\n   *\n   * @param {N} node     The <math> node to convert to MmlNodes\n   * @return {MmlNode}   The MmlNode at the root of the converted tree\n   */\n  public compile(node: N): MmlNode {\n    let mml = this.makeNode(node);\n    mml.verifyTree(this.options['verify']);\n    mml.setInheritedAttributes({}, false, 0, false);\n    mml.walkTree(this.markMrows);\n    return mml;\n  }\n\n  /**\n   * Recursively convert nodes and their children, taking MathJax classes\n   * into account.\n   *\n   *  FIXME: we should use data-* attributes rather than classes for these\n   *\n   * @param {N} node     The node to convert to an MmlNode\n   * @return {MmlNode}   The converted MmlNode\n   */\n  public makeNode(node: N): MmlNode {\n    const adaptor = this.adaptor;\n    let limits = false;\n    let kind = adaptor.kind(node).replace(/^.*:/, '');\n    let texClass = adaptor.getAttribute(node, 'data-mjx-texclass') || '';\n    if (texClass) {\n      texClass = this.filterAttribute('data-mjx-texclass', texClass) || '';\n    }\n    let type = texClass && kind === 'mrow' ? 'TeXAtom' : kind;\n    for (const name of this.filterClassList(adaptor.allClasses(node))) {\n      if (name.match(/^MJX-TeXAtom-/) && kind === 'mrow') {\n        texClass = name.substr(12);\n        type = 'TeXAtom';\n      } else if (name === 'MJX-fixedlimits') {\n        limits = true;\n      }\n    }\n    this.factory.getNodeClass(type) || this.error('Unknown node type \"' + type + '\"');\n    let mml = this.factory.create(type);\n    if (type === 'TeXAtom' && texClass === 'OP' && !limits) {\n      mml.setProperty('movesupsub', true);\n      mml.attributes.setInherited('movablelimits', true);\n    }\n    if (texClass) {\n      mml.texClass = (TEXCLASS as {[name: string]: number})[texClass];\n      mml.setProperty('texClass', mml.texClass);\n    }\n    this.addAttributes(mml, node);\n    this.checkClass(mml, node);\n    this.addChildren(mml, node);\n    return mml;\n  }\n\n  /**\n   * Copy the attributes from a MathML node to an MmlNode.\n   *\n   * @param {MmlNode} mml       The MmlNode to which attributes will be added\n   * @param {N} node  The MathML node whose attributes to copy\n   */\n  protected addAttributes(mml: MmlNode, node: N) {\n    let ignoreVariant = false;\n    for (const attr of this.adaptor.allAttributes(node)) {\n      let name = attr.name;\n      let value = this.filterAttribute(name, attr.value);\n      if (value === null || name === 'xmlns') {\n        continue;\n      }\n      if (name.substr(0, 9) === 'data-mjx-') {\n        switch (name.substr(9)) {\n        case 'alternate':\n          mml.setProperty('variantForm', true);\n          break;\n        case 'variant':\n          mml.attributes.set('mathvariant', value);\n          ignoreVariant = true;\n          break;\n        case 'smallmatrix':\n          mml.setProperty('scriptlevel', 1);\n          mml.setProperty('useHeight', false);\n          break;\n        case 'accent':\n          mml.setProperty('mathaccent', value === 'true');\n          break;\n        case 'auto-op':\n          mml.setProperty('autoOP', value === 'true');\n          break;\n        case 'script-align':\n          mml.setProperty('scriptalign', value);\n          break;\n        }\n      } else if (name !== 'class') {\n        let val = value.toLowerCase();\n        if (val === 'true' || val === 'false') {\n          mml.attributes.set(name, val === 'true');\n        } else if (!ignoreVariant || name !== 'mathvariant') {\n          mml.attributes.set(name, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Provide a hook for the Safe extension to filter attribute values.\n   *\n   * @param {string} name   The name of an attribute to filter\n   * @param {string} value  The value to filter\n   */\n  protected filterAttribute(_name: string, value: string) {\n    return value;\n  }\n\n  /**\n   * Provide a hook for the Safe extension to filter class names.\n   *\n   * @param {string[]} list   The list of class names to filter\n   */\n  protected filterClassList(list: string[]) {\n    return list;\n  }\n\n  /**\n   * Convert the children of the MathML node and add them to the MmlNode\n   *\n   * @param {MmlNode} mml  The MmlNode to which children will be added\n   * @param {N} node       The MathML node whose children are to be copied\n   */\n  protected addChildren(mml: MmlNode, node: N) {\n    if (mml.arity === 0) {\n      return;\n    }\n    const adaptor = this.adaptor;\n    for (const child of adaptor.childNodes(node) as N[]) {\n      const name = adaptor.kind(child);\n      if (name === '#comment') {\n        continue;\n      }\n      if (name === '#text') {\n        this.addText(mml, child);\n      } else if (mml.isKind('annotation-xml')) {\n        mml.appendChild((this.factory.create('XML') as XMLNode).setXML(child, adaptor));\n      } else {\n        let childMml = mml.appendChild(this.makeNode(child)) as MmlNode;\n        if (childMml.arity === 0 && adaptor.childNodes(child).length) {\n          if (this.options['fixMisplacedChildren']) {\n            this.addChildren(mml, child);\n          } else {\n            childMml.mError('There should not be children for ' + childMml.kind + ' nodes',\n                            this.options['verify'], true);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Add text to a token node\n   *\n   * @param {MmlNode} mml  The MmlNode to which text will be added\n   * @param {N} child      The text node whose contents is to be copied\n   */\n  protected addText(mml: MmlNode, child: N) {\n    let text = this.adaptor.value(child);\n    if ((mml.isToken || mml.getProperty('isChars')) && mml.arity) {\n      if (mml.isToken) {\n        text = Entities.translate(text);\n        text = this.trimSpace(text);\n      }\n      mml.appendChild((this.factory.create('text') as TextNode).setText(text));\n    } else if (text.match(/\\S/)) {\n      this.error('Unexpected text node \"' + text + '\"');\n    }\n  }\n\n  /**\n   * Check for special MJX values in the class and process them\n   *\n   * @param {MmlNode} mml       The MmlNode to be modified according to the class markers\n   * @param {N} node  The MathML node whose class is to be processed\n   */\n  protected checkClass(mml: MmlNode, node: N) {\n    let classList = [];\n    for (const name of this.filterClassList(this.adaptor.allClasses(node))) {\n      if (name.substr(0, 4) === 'MJX-') {\n        if (name === 'MJX-variant') {\n          mml.setProperty('variantForm', true);\n        } else if (name.substr(0, 11) !== 'MJX-TeXAtom') {\n          mml.attributes.set('mathvariant', this.fixCalligraphic(name.substr(3)));\n        }\n      } else {\n        classList.push(name);\n      }\n    }\n    if (classList.length) {\n      mml.attributes.set('class', classList.join(' '));\n    }\n  }\n\n  /**\n   * Fix the old incorrect spelling of calligraphic.\n   *\n   * @param {string} variant  The mathvariant name\n   * @return {string}         The corrected variant\n   */\n  protected fixCalligraphic(variant: string): string {\n    return variant.replace(/caligraphic/, 'calligraphic');\n  }\n\n  /**\n   * Check to see if an mrow has delimiters at both ends (so looks like an mfenced structure).\n   *\n   * @param {MmlNode} mml  The node to check for mfenced structure\n   */\n  protected markMrows(mml: MmlNode) {\n    if (mml.isKind('mrow') && !mml.isInferred && mml.childNodes.length >= 2) {\n      let first = mml.childNodes[0] as MmlNode;\n      let last = mml.childNodes[mml.childNodes.length - 1] as MmlNode;\n      if (first.isKind('mo') && first.attributes.get('fence') && first.attributes.get('stretchy') &&\n          last.isKind('mo') && last.attributes.get('fence') && last.attributes.get('stretchy')) {\n        if (first.childNodes.length) {\n          mml.setProperty('open', (first as AbstractMmlTokenNode).getText());\n        }\n        if (last.childNodes.length) {\n          mml.setProperty('close', (last as AbstractMmlTokenNode).getText());\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} text  The text to have leading/trailing spaced removed\n   * @return {string}      The trimmed text\n   */\n  protected trimSpace(text: string): string {\n    return text.replace(/[\\t\\n\\r]/g, ' ')    // whitespace to spaces\n               .replace(/^ +/, '')           // initial whitespace\n               .replace(/ +$/, '')           // trailing whitespace\n               .replace(/  +/g, ' ');        // internal multiple whitespace\n  }\n\n  /**\n   * @param {string} message  The error message to produce\n   */\n  protected error(message: string) {\n    throw new Error(message);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}